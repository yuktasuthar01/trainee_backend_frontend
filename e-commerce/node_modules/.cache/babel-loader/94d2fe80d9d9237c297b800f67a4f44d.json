{"ast":null,"code":"var _jsxFileName = \"/home/yukta/Desktop/Learning/trainee_backend_frontend/e-commerce/src/components/ProductItems.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Pagination } from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ProductItem from './ProductItem';\nimport { fetchAPI } from '../utils/dataFetching';\nimport { failure } from '../redux/slices/alertSlice';\nimport { sortBy } from '../redux/slices/querySlice';\nimport CenteredImage from './CenteredImage';\nimport classes from '../styles/ProductItems.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductItems = () => {\n  _s();\n\n  const {\n    search,\n    sort\n  } = useSelector(state => state.query);\n  const dispatch = useDispatch();\n  const itemsPerPage = 12;\n  const [products, setProducts] = useState([]);\n  const [count, setCount] = useState(0);\n  const [pages, setPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [trigger, setTrigger] = useState(false);\n\n  const countPages = totalProducts => {\n    const result = totalProducts / (itemsPerPage + 1) + 1;\n    return parseInt(result);\n  };\n\n  const getProducts = async page => {\n    try {\n      const requestObject = {\n        method: 'GET',\n        url: 'products',\n        queryParams: {\n          take: itemsPerPage,\n          page\n        }\n      };\n      search && (requestObject.queryParams.search = search);\n      sort && (requestObject.queryParams.sort = sort);\n      const {\n        data\n      } = await fetchAPI(requestObject);\n\n      if (data.count <= itemsPerPage) {\n        setCurrentPage(state => {\n          return state === 1 ? state : state - 1;\n        });\n      }\n\n      if (data.count > 0) {\n        setProducts(data.products);\n      }\n\n      setPages(countPages(data.count));\n      setCount(data.count);\n    } catch (err) {\n      dispatch(failure(err.message));\n    }\n  };\n\n  const onPageChange = (_, page) => {\n    console.log('Changed');\n\n    if (currentPage !== page) {\n      setCurrentPage(page);\n      setTrigger(!trigger);\n    }\n  };\n\n  const onSortingChange = e => {\n    dispatch(sortBy(e.target.value));\n  };\n\n  useEffect(() => {\n    getProducts(currentPage - 1); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [trigger, search, sort]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.section,\n    children: !!count ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.header,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Products - \", count, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sort,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sort\",\n            children: \"Sort By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            defaultValue: \"\",\n            onChange: onSortingChange,\n            id: \"sort\",\n            name: \"sort\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"asc\",\n              children: \"a-z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"desc\",\n              children: \"z-a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.items,\n        children: products.map(product => /*#__PURE__*/_jsxDEV(ProductItem, {\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 57\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        className: classes.pagination,\n        onChange: onPageChange,\n        page: currentPage,\n        count: pages,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(CenteredImage, {\n      alt: \"No products found\",\n      src: \"/images/girl-empty.gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductItems, \"b0npysGRI/+yiSd0VpuMTM5Tgig=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProductItems;\nexport default ProductItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItems\");","map":{"version":3,"sources":["/home/yukta/Desktop/Learning/trainee_backend_frontend/e-commerce/src/components/ProductItems.js"],"names":["useEffect","useState","Pagination","useSelector","useDispatch","ProductItem","fetchAPI","failure","sortBy","CenteredImage","classes","ProductItems","search","sort","state","query","dispatch","itemsPerPage","products","setProducts","count","setCount","pages","setPages","currentPage","setCurrentPage","trigger","setTrigger","countPages","totalProducts","result","parseInt","getProducts","page","requestObject","method","url","queryParams","take","data","err","message","onPageChange","_","console","log","onSortingChange","e","target","value","section","header","items","map","product","id","pagination"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Pagination } from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ProductItem from './ProductItem';\nimport { fetchAPI } from '../utils/dataFetching';\nimport { failure } from '../redux/slices/alertSlice';\nimport { sortBy } from '../redux/slices/querySlice';\nimport CenteredImage from './CenteredImage';\nimport classes from '../styles/ProductItems.module.css';\n\nconst ProductItems = () => {\n\n    const { search, sort } = useSelector(state => state.query);\n    const dispatch = useDispatch();\n    const itemsPerPage = 12;\n\n    const [products, setProducts] = useState([]);\n    const [count, setCount] = useState(0);\n    const [pages, setPages] = useState(1);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [trigger, setTrigger] = useState(false);\n\n    const countPages = (totalProducts) => {\n        const result = (totalProducts / (itemsPerPage + 1)) + 1;\n        return parseInt(result);\n    };\n\n    const getProducts = async (page) => {\n        try {\n            const requestObject = {\n                method: 'GET',\n                url: 'products',\n                queryParams: {\n                    take: itemsPerPage,\n                    page\n                }\n            };\n\n            search && (requestObject.queryParams.search = search);\n            sort && (requestObject.queryParams.sort = sort);\n\n            const { data } = await fetchAPI(requestObject);\n\n            if (data.count <= itemsPerPage) {\n                setCurrentPage(state => {\n                    return state === 1 ? state : state - 1;\n                });\n            }\n\n            if (data.count > 0) {\n                setProducts(data.products);\n            }\n\n            setPages(countPages(data.count));\n            setCount(data.count);\n        } catch (err) {\n            dispatch(failure(err.message));\n        }\n    };\n\n    const onPageChange = (_, page) => {\n        console.log('Changed');\n        if (currentPage !== page) {\n            setCurrentPage(page);\n            setTrigger(!trigger);\n        }\n    };\n\n    const onSortingChange = (e) => { dispatch(sortBy(e.target.value)); };\n\n    useEffect(() => {\n        getProducts(currentPage - 1);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [trigger, search, sort]);\n\n\n    return (\n        <div className={classes.section}>\n            {\n                !!count ? (\n                    <>\n                        <div className={classes.header}>\n                            <h2>Products - {count} items</h2>\n                            <div className={classes.sort}>\n                                <label htmlFor='sort'>Sort By</label>\n                                <select\n                                    defaultValue=''\n                                    onChange={onSortingChange}\n                                    id='sort'\n                                    name='sort'>\n                                    <option value=''>-</option>\n                                    <option value='asc'>a-z</option>\n                                    <option value='desc'>z-a</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className={classes.items}>\n                            {\n                                products.map(product => <ProductItem key={product.id} product={product} />)\n                            }\n                        </div>\n                        <Pagination\n                            className={classes.pagination}\n                            onChange={onPageChange}\n                            page={currentPage}\n                            count={pages}\n                            color=\"primary\" />\n                    </>\n                ) : (\n                    <CenteredImage\n                        alt='No products found'\n                        src='/images/girl-empty.gif'\n                    />\n                )\n            }\n        </div>\n    );\n};\n\nexport default ProductItems;"]},"metadata":{},"sourceType":"module"}