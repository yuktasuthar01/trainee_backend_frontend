{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { login, logout, signup } from './authSlice';\nimport { getCart, saveCart } from './cartSlice';\nconst initialState = {\n  open: false,\n  severity: null,\n  message: null\n};\nconst alertSlice = createSlice({\n  name: 'alert',\n  initialState,\n  reducers: {\n    success(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.open = true;\n      state.severity = 'success';\n      state.message = payload;\n    },\n\n    failure(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      state.open = true;\n      state.severity = 'error';\n      state.message = payload;\n    },\n\n    warning(state, _ref3) {\n      let {\n        payload\n      } = _ref3;\n      state.open = true;\n      state.severity = 'warning';\n      state.message = payload;\n    },\n\n    info(state, _ref4) {\n      let {\n        payload\n      } = _ref4;\n      state.open = true;\n      state.severity = 'info';\n      state.message = payload;\n    },\n\n    close(state) {\n      state.open = false;\n      state.severity = null;\n      state.message = null;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(login.fulfilled, (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.open = true;\n      state.severity = 'success';\n      state.message = payload.message;\n    });\n    builder.addCase(signup.fulfilled, (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      state.open = true;\n      state.severity = 'success';\n      state.message = payload.message;\n    });\n    builder.addCase(logout.fulfilled, (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      state.open = true;\n      state.severity = 'success';\n      state.message = payload.message;\n    });\n    builder.addCase(saveCart.fulfilled, (state, _ref8) => {\n      let {\n        payload\n      } = _ref8;\n      state.open = true;\n      state.severity = 'success';\n      state.message = payload.message;\n    });\n    builder.addCase(saveCart.rejected, (state, _ref9) => {\n      let {\n        payload\n      } = _ref9;\n      state.open = true;\n      state.severity = 'error';\n      state.message = payload.message;\n    });\n    builder.addCase(getCart.rejected, (state, _ref10) => {\n      let {\n        payload\n      } = _ref10;\n      state.open = true;\n      state.severity = 'error';\n      state.message = payload.message;\n    });\n    builder.addCase(logout.rejected, (state, _ref11) => {\n      let {\n        payload\n      } = _ref11;\n      state.open = true;\n      state.severity = 'error';\n      state.message = payload.message;\n    });\n    builder.addCase(signup.rejected, (state, _ref12) => {\n      let {\n        payload\n      } = _ref12;\n      state.open = true;\n      state.severity = 'error';\n      state.message = payload.message;\n    });\n    builder.addCase(login.rejected, (state, _ref13) => {\n      let {\n        payload\n      } = _ref13;\n      state.open = true;\n      state.severity = 'error';\n      state.message = payload.message;\n    });\n  }\n});\nexport const {\n  success,\n  failure,\n  warning,\n  info,\n  close\n} = alertSlice.actions;\nexport default alertSlice.reducer;","map":{"version":3,"sources":["/home/yukta/Desktop/Learning/trainee_backend_frontend/e-commerce/src/redux/slices/alertSlice.js"],"names":["createSlice","login","logout","signup","getCart","saveCart","initialState","open","severity","message","alertSlice","name","reducers","success","state","payload","failure","warning","info","close","extraReducers","builder","addCase","fulfilled","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { login, logout, signup } from './authSlice';\nimport { getCart, saveCart } from './cartSlice';\n\nconst initialState = {\n    open: false,\n    severity: null,\n    message: null\n};\n\n\nconst alertSlice = createSlice({\n    name: 'alert',\n    initialState,\n    reducers: {\n        success(state, { payload }) {\n            state.open = true;\n            state.severity = 'success';\n            state.message = payload;\n        },\n        failure(state, { payload }) {\n            state.open = true;\n            state.severity = 'error';\n            state.message = payload;\n        },\n        warning(state, { payload }) {\n            state.open = true;\n            state.severity = 'warning';\n            state.message = payload;\n        },\n        info(state, { payload }) {\n            state.open = true;\n            state.severity = 'info';\n            state.message = payload;\n        },\n        close(state) {\n            state.open = false;\n            state.severity = null;\n            state.message = null;\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(login.fulfilled, (state, { payload }) => {\n            state.open = true;\n            state.severity = 'success';\n            state.message = payload.message;\n        });\n\n        builder.addCase(signup.fulfilled, (state, { payload }) => {\n            state.open = true;\n            state.severity = 'success';\n            state.message = payload.message;\n        });\n\n        builder.addCase(logout.fulfilled, (state, { payload }) => {\n            state.open = true;\n            state.severity = 'success';\n            state.message = payload.message;\n        });\n\n        builder.addCase(saveCart.fulfilled, (state, { payload }) => {\n            state.open = true;\n            state.severity = 'success';\n            state.message = payload.message;\n        });\n\n        builder.addCase(saveCart.rejected, (state, { payload }) => {\n            state.open = true;\n            state.severity = 'error';\n            state.message = payload.message;\n        });\n\n        builder.addCase(getCart.rejected, (state, { payload }) => {\n            state.open = true;\n            state.severity = 'error';\n            state.message = payload.message;\n        });\n\n        builder.addCase(logout.rejected, (state, { payload }) => {\n            state.open = true;\n            state.severity = 'error';\n            state.message = payload.message;\n        });\n\n        builder.addCase(signup.rejected, (state, { payload }) => {\n            state.open = true;\n            state.severity = 'error';\n            state.message = payload.message;\n        });\n\n        builder.addCase(login.rejected, (state, { payload }) => {\n            state.open = true;\n            state.severity = 'error';\n            state.message = payload.message;\n        });\n    }\n});\n\nexport const { success, failure, warning, info, close } = alertSlice.actions;\n\nexport default alertSlice.reducer;"]},"metadata":{},"sourceType":"module"}