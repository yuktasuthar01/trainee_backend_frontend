{"ast":null,"code":"var _jsxFileName = \"/home/yukta/Desktop/personal-projects-main/e-commerce/src/components/ProductList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Table, TableBody, TableContainer, TablePagination, TableRow } from '@mui/material';\nimport { useNavigate } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProductListItem from './ProductListItem';\nimport { fetchAPI } from '../utils/dataFetching';\nimport { failure, success } from '../redux/slices/alertSlice';\nimport classes from '../styles/ProductList.module.css';\nimport CenteredImage from './CenteredImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductList = () => {\n  _s();\n\n  const {\n    search\n  } = useSelector(state => state.query);\n  const [products, setProducts] = useState([]);\n  const [count, setCount] = useState(0);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const onPageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const onRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const deleteProduct = async id => {\n    try {\n      const {\n        message\n      } = await fetchAPI({\n        method: 'DELETE',\n        url: 'delete/product',\n        body: {\n          id\n        }\n      });\n      dispatch(success(message));\n      setProducts(prevState => {\n        return prevState.filter(item => item.id !== id);\n      });\n    } catch (err) {\n      dispatch(failure(err.message));\n    }\n  };\n\n  const getProducts = async () => {\n    try {\n      const requestObject = {\n        method: 'GET',\n        url: 'me/products',\n        queryParams: {\n          take: rowsPerPage,\n          page\n        }\n      };\n      search && (requestObject.queryParams.search = search);\n      const {\n        data\n      } = await fetchAPI(requestObject);\n\n      if (data.count > 0) {\n        setProducts(data.products);\n      }\n\n      setCount(data.count);\n    } catch (err) {\n      dispatch(failure(err.message));\n    }\n  };\n\n  useEffect(() => {\n    getProducts(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, rowsPerPage, search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.section,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.header,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          navigate('/product/add');\n        },\n        className: `themepinkbutton ${classes.searchbutton}`,\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), !!count ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: classes.table,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"S.No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Subtitle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"MRP (\\u20B9)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: products.map((product, index) => /*#__PURE__*/_jsxDEV(ProductListItem, {\n              product: { ...product,\n                index: index + 1\n              },\n              deleteProduct: deleteProduct\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(TableBody, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TablePagination, {\n                count: count,\n                page: page,\n                rowsPerPage: rowsPerPage,\n                onPageChange: onPageChange,\n                onRowsPerPageChange: onRowsPerPageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(CenteredImage, {\n      alt: \"No Products found\",\n      src: \"/images/girl-empty.gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductList, \"3sbtKIa1pNq/c0gOOoHGxGeJGKs=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/home/yukta/Desktop/personal-projects-main/e-commerce/src/components/ProductList.js"],"names":["useEffect","useState","Table","TableBody","TableContainer","TablePagination","TableRow","useNavigate","useDispatch","useSelector","ProductListItem","fetchAPI","failure","success","classes","CenteredImage","ProductList","search","state","query","products","setProducts","count","setCount","page","setPage","rowsPerPage","setRowsPerPage","navigate","dispatch","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","value","deleteProduct","id","message","method","url","body","prevState","filter","item","err","getProducts","requestObject","queryParams","take","data","section","header","e","searchbutton","container","table","map","product","index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Table, TableBody, TableContainer, TablePagination, TableRow } from '@mui/material';\nimport { useNavigate } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProductListItem from './ProductListItem';\nimport { fetchAPI } from '../utils/dataFetching';\nimport { failure, success } from '../redux/slices/alertSlice';\nimport classes from '../styles/ProductList.module.css';\nimport CenteredImage from './CenteredImage';\n\nconst ProductList = () => {\n\n    const { search } = useSelector(state => state.query);\n\n    const [products, setProducts] = useState([]);\n    const [count, setCount] = useState(0);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const onPageChange = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const onRowsPerPageChange = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const deleteProduct = async (id) => {\n        try {\n            const { message } = await fetchAPI({\n                method: 'DELETE',\n                url: 'delete/product',\n                body: { id }\n            });\n\n            dispatch(success(message));\n\n            setProducts(prevState => {\n                return prevState.filter(item => item.id !== id);\n            });\n        } catch (err) {\n            dispatch(failure(err.message));\n        }\n    };\n\n    const getProducts = async () => {\n        try {\n\n            const requestObject = {\n                method: 'GET',\n                url: 'me/products',\n                queryParams: {\n                    take: rowsPerPage,\n                    page\n                }\n            };\n\n            search && (requestObject.queryParams.search = search);\n\n            const { data } = await fetchAPI(requestObject);\n\n            if (data.count > 0) {\n                setProducts(data.products);\n            }\n            setCount(data.count);\n        } catch (err) {\n            dispatch(failure(err.message));\n        }\n    };\n\n    useEffect(() => {\n        getProducts();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [page, rowsPerPage, search]);\n\n    return (\n        <div className={classes.section}>\n            <div className={classes.header}>\n                <button\n                    onClick={e => { navigate('/product/add'); }}\n                    className={`themepinkbutton ${classes.searchbutton}`}>\n                    Add Product\n                </button>\n            </div>\n            {\n                !!count ? (\n                    <>\n                        <div className={classes.container}>\n                            <table className={classes.table}>\n                                <thead>\n                                    <tr>\n                                        <th>S.No</th>\n                                        <th>Title</th>\n                                        <th>Subtitle</th>\n                                        <th>MRP (₹)</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        products.map((product, index) =>\n                                            <ProductListItem\n                                                key={product.id}\n                                                product={{ ...product, index: index + 1 }}\n                                                deleteProduct={deleteProduct} />\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                        <TableContainer><Table><TableBody><TableRow>\n                            <TablePagination\n                                count={count}\n                                page={page}\n                                rowsPerPage={rowsPerPage}\n                                onPageChange={onPageChange}\n                                onRowsPerPageChange={onRowsPerPageChange}\n                            />\n                        </TableRow></TableBody></Table></TableContainer>\n                    </>\n                ) : (\n                    <CenteredImage\n                        alt='No Products found'\n                        src='/images/girl-empty.gif'\n\n                    />\n                )\n            }\n\n        </div>\n    );\n};\n\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}