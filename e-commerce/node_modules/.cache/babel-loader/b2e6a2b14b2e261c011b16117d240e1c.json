{"ast":null,"code":"var _jsxFileName = \"/home/yukta/Desktop/Learning/trainee_backend_frontend/e-commerce/src/components/ProductForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux/';\nimport { useNavigate } from 'react-router';\nimport { fetchAPI } from '../utils/dataFetching';\nimport { failure, success } from '../redux/slices/alertSlice';\nimport classes from '../styles/ProductForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductForm = _ref => {\n  _s();\n\n  var _product$title, _product$subtitle, _product$description, _product$categories$j, _product$categories, _product$amount, _product$sale;\n\n  let {\n    isEdit = false,\n    product\n  } = _ref;\n  const [title, setTitle] = useState((_product$title = product === null || product === void 0 ? void 0 : product.title) !== null && _product$title !== void 0 ? _product$title : '');\n  const [subtitle, setSubtitle] = useState((_product$subtitle = product === null || product === void 0 ? void 0 : product.subtitle) !== null && _product$subtitle !== void 0 ? _product$subtitle : '');\n  const [description, setDescription] = useState((_product$description = product === null || product === void 0 ? void 0 : product.description) !== null && _product$description !== void 0 ? _product$description : '');\n  const [categories, setCategories] = useState((_product$categories$j = product === null || product === void 0 ? void 0 : (_product$categories = product.categories) === null || _product$categories === void 0 ? void 0 : _product$categories.join(' ')) !== null && _product$categories$j !== void 0 ? _product$categories$j : '');\n  const [amount, setAmount] = useState((_product$amount = product === null || product === void 0 ? void 0 : product.amount) !== null && _product$amount !== void 0 ? _product$amount : '');\n  const [sale, setSale] = useState((_product$sale = product === null || product === void 0 ? void 0 : product.sale) !== null && _product$sale !== void 0 ? _product$sale : '');\n  const [image, setImage] = useState(null);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const formData = new FormData();\n      image && formData.append('image', image);\n      isEdit && formData.append('id', product.id);\n      formData.append('title', title);\n      formData.append('subtitle', subtitle);\n      formData.append('categories', categories);\n      formData.append('description', description);\n      formData.append('amount', amount);\n      sale && formData.append('sale', sale);\n      const requestObject = {\n        method: isEdit ? 'PATCH' : 'POST',\n        url: `${isEdit ? 'update' : 'create'}/product`,\n        body: formData,\n        isFormData: true\n      };\n      const {\n        message\n      } = await fetchAPI(requestObject);\n      dispatch(success(message));\n      navigate('/products');\n    } catch (err) {\n      dispatch(failure(err.message));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: classes.section,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h_fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formfield\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Product Title *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          id: \"title\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formfield\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"author\",\n          children: \"Product Subtitle *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: subtitle,\n          onChange: e => setSubtitle(e.target.value),\n          id: \"subtitle\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h_fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formfield\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categories\",\n          children: \"Shop by Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: categories,\n          onChange: e => setCategories(e.target.value),\n          id: \"categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formfield\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"desc\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          id: \"desc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h_fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formfield\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Maximum Retail Price(\\u20B9) *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          id: \"amount\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formfield\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sale\",\n          children: \"Sale(%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: sale,\n          onChange: e => setSale(e.target.value),\n          id: \"sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.fileinput_container,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: e => {\n          var _e$target$files;\n\n          return setImage((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]);\n        },\n        className: classes.fileinput,\n        required: !isEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttons,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"themegreenbutton\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        onClick: () => {\n          navigate(-1);\n        },\n        className: \"themepinkbutton\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductForm, \"26lWubfAjHnIZ5uva5Ii+rzHoD8=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"sources":["/home/yukta/Desktop/Learning/trainee_backend_frontend/e-commerce/src/components/ProductForm.js"],"names":["useState","useDispatch","useNavigate","fetchAPI","failure","success","classes","ProductForm","isEdit","product","title","setTitle","subtitle","setSubtitle","description","setDescription","categories","setCategories","join","amount","setAmount","sale","setSale","image","setImage","navigate","dispatch","handleSubmit","e","preventDefault","formData","FormData","append","id","requestObject","method","url","body","isFormData","message","err","section","target","value","fileinput_container","files","fileinput","buttons"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux/';\nimport { useNavigate } from 'react-router';\nimport { fetchAPI } from '../utils/dataFetching';\nimport { failure, success } from '../redux/slices/alertSlice';\nimport classes from '../styles/ProductForm.module.css';\n\nconst ProductForm = ({ isEdit = false, product }) => {\n\n    const [title, setTitle] = useState(product?.title ?? '');\n    const [subtitle, setSubtitle] = useState(product?.subtitle ?? '');\n    const [description, setDescription] = useState(product?.description ?? '');\n    const [categories, setCategories] = useState(product?.categories?.join(' ') ?? '');\n    const [amount, setAmount] = useState(product?.amount ?? '');\n    const [sale, setSale] = useState(product?.sale ?? '');\n    const [image, setImage] = useState(null);\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const formData = new FormData();\n            image && formData.append('image', image);\n            isEdit && formData.append('id', product.id);\n            formData.append('title', title);\n            formData.append('subtitle', subtitle);\n            formData.append('categories', categories);\n            formData.append('description', description);\n            formData.append('amount', amount);\n            sale && formData.append('sale', sale);\n\n            const requestObject = {\n                method: isEdit ? 'PATCH' : 'POST',\n                url: `${isEdit ? 'update' : 'create'}/product`,\n                body: formData,\n                isFormData: true\n            };\n\n            const { message } = await fetchAPI(requestObject);\n\n            dispatch(success(message));\n            navigate('/products');\n\n        } catch (err) {\n            dispatch(failure(err.message));\n        }\n    };\n\n\n    return (\n        <form onSubmit={handleSubmit} className={classes.section}>\n            <div className='h_fields'>\n                <div className='formfield'>\n                    <label htmlFor='title'>Product Title *</label>\n                    <input\n                        type='text'\n                        value={title}\n                        onChange={e => setTitle(e.target.value)}\n                        id='title'\n                        required />\n                </div>\n                <div className='formfield'>\n                    <label htmlFor='author'>Product Subtitle *</label>\n                    <input\n                        type='text'\n                        value={subtitle}\n                        onChange={e => setSubtitle(e.target.value)}\n                        id='subtitle'\n                        required />\n                </div>\n            </div>\n\n            <div className='h_fields'>\n                <div className='formfield'>\n                    <label htmlFor='categories'>Shop by Categories</label>\n                    <input\n                        type='text'\n                        value={categories}\n                        onChange={e => setCategories(e.target.value)}\n                        id='categories' />\n                </div>\n                <div className='formfield'>\n                    <label htmlFor='desc'>Description</label>\n                    <input\n                        type='text'\n                        value={description}\n                        onChange={e => setDescription(e.target.value)}\n                        id='desc' />\n                </div>\n            </div>\n\n            <div className='h_fields'>\n                <div className='formfield'>\n                    <label htmlFor='amount'>Maximum Retail Price(₹) *</label>\n                    <input\n                        type='number'\n                        value={amount}\n                        onChange={e => setAmount(e.target.value)}\n                        id='amount'\n                        required />\n                </div>\n                <div className='formfield'>\n                    <label htmlFor='sale'>Sale(%)</label>\n                    <input\n                        type='number'\n                        value={sale}\n                        onChange={e => setSale(e.target.value)}\n                        id='sale' />\n                </div>\n            </div>\n\n            <div className={classes.fileinput_container}>\n                <input\n                    type='file'\n                    name='image'\n                    onChange={e => setImage(e.target.files?.[0])}\n                    className={classes.fileinput}\n                    required={!isEdit} />\n            </div>\n\n            <div className={classes.buttons}>\n                <button\n                    type='submit'\n                    className='themegreenbutton'>\n                    Save\n                </button>\n                <button\n                    type='reset'\n                    onClick={() => { navigate(-1); }}\n                    className='themepinkbutton'>\n                    Cancel\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default ProductForm;"]},"metadata":{},"sourceType":"module"}