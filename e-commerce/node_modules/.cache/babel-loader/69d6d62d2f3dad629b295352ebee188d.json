{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"BackdropComponent\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"closeAfterTransition\", \"component\", \"components\", \"componentsProps\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"theme\", \"onTransitionEnter\", \"onTransitionExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport isHostComponent from '../utils/isHostComponent';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../TrapFocus';\nimport { getModalUtilityClass } from './modalUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nconst defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\n  var _props$ariaHidden;\n\n  const {\n    BackdropComponent,\n    BackdropProps,\n    children,\n    classes: classesProp,\n    className,\n    closeAfterTransition = false,\n    component = 'div',\n    components = {},\n    componentsProps = {},\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    // private\n    // eslint-disable-next-line react/prop-types\n    manager = defaultManager,\n    onBackdropClick,\n    onClose,\n    onKeyDown,\n    open,\n\n    /* eslint-disable react/prop-types */\n    theme,\n    onTransitionEnter,\n    onTransitionExited\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [exited, setExited] = React.useState(true);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  const hasTransition = getHasTransition(props);\n  const ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  const ownerState = _extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  const handleEnter = () => {\n    setExited(false);\n\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n\n  const handleExited = () => {\n    setExited(true);\n\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  const Root = components.Root || component;\n  const rootProps = componentsProps.root || {};\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({\n      role: \"presentation\"\n    }, rootProps, !isHostComponent(Root) && {\n      as: component,\n      ownerState: _extends({}, ownerState, rootProps.ownerState),\n      theme\n    }, other, {\n      ref: handleRef,\n      onKeyDown: handleKeyDown,\n      className: clsx(classes.root, rootProps.className, className),\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({\n        \"aria-hidden\": true,\n        open: open,\n        onClick: handleBackdropClick\n      }, BackdropProps)) : null, /*#__PURE__*/_jsx(TrapFocus, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the backdrop element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default ModalUnstyled;","map":{"version":3,"sources":["/home/yukta/Desktop/personal-projects-main/e-commerce/node_modules/@mui/base/ModalUnstyled/ModalUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","elementAcceptingRef","HTMLElementType","unstable_ownerDocument","ownerDocument","unstable_useForkRef","useForkRef","unstable_createChainedFunction","createChainedFunction","unstable_useEventCallback","useEventCallback","composeClasses","isHostComponent","Portal","ModalManager","ariaHidden","TrapFocus","getModalUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","classes","slots","root","getContainer","container","getHasTransition","props","children","hasOwnProperty","defaultManager","ModalUnstyled","forwardRef","ref","_props$ariaHidden","BackdropComponent","BackdropProps","classesProp","className","closeAfterTransition","component","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onKeyDown","theme","onTransitionEnter","onTransitionExited","other","setExited","useState","modal","useRef","mountNodeRef","modalRef","handleRef","hasTransition","ariaHiddenProp","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","childProps","tabIndex","undefined","onEnter","onExited","Root","rootProps","role","as","onClick","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","elementType","object","isRequired","string","bool","shape","oneOfType","func"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,MAAMC,SAAS,GAAG,CAAC,mBAAD,EAAsB,eAAtB,EAAuC,UAAvC,EAAmD,SAAnD,EAA8D,WAA9D,EAA2E,sBAA3E,EAAmG,WAAnG,EAAgH,YAAhH,EAA8H,iBAA9H,EAAiJ,WAAjJ,EAA8J,kBAA9J,EAAkL,qBAAlL,EAAyM,sBAAzM,EAAiO,eAAjO,EAAkP,qBAAlP,EAAyQ,mBAAzQ,EAA8R,cAA9R,EAA8S,aAA9S,EAA6T,SAA7T,EAAwU,iBAAxU,EAA2V,SAA3V,EAAsW,WAAtW,EAAmX,MAAnX,EAA2X,OAA3X,EAAoY,mBAApY,EAAyZ,oBAAzZ,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,mBAAT,EAA8BC,eAA9B,EAA+CC,sBAAsB,IAAIC,aAAzE,EAAwFC,mBAAmB,IAAIC,UAA/G,EAA2HC,8BAA8B,IAAIC,qBAA7J,EAAoLC,yBAAyB,IAAIC,gBAAjN,QAAyO,YAAzO;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,IAAuBC,UAAvB,QAAyC,gBAAzC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AAEA,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;AACtC,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA;AAHI,MAIFH,UAJJ;AAKA,QAAMI,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,CAACJ,IAAD,IAASC,MAAT,IAAmB,QAA5B;AADM,GAAd;AAGA,SAAOd,cAAc,CAACgB,KAAD,EAAQV,oBAAR,EAA8BS,OAA9B,CAArB;AACD,CAVD;;AAYA,SAASG,YAAT,CAAsBC,SAAtB,EAAiC;AAC/B,SAAO,OAAOA,SAAP,KAAqB,UAArB,GAAkCA,SAAS,EAA3C,GAAgDA,SAAvD;AACD;;AAED,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAOA,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACC,QAAN,CAAeD,KAAf,CAAqBE,cAArB,CAAoC,IAApC,CAAjB,GAA6D,KAApE;AACD,C,CAAC;AACF;;;AAGA,MAAMC,cAAc,GAAG,IAAIrB,YAAJ,EAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMsB,aAAa,GAAG,aAAatC,KAAK,CAACuC,UAAN,CAAiB,SAASD,aAAT,CAAuBJ,KAAvB,EAA8BM,GAA9B,EAAmC;AACrF,MAAIC,iBAAJ;;AAEA,QAAM;AACJC,IAAAA,iBADI;AAEJC,IAAAA,aAFI;AAGJR,IAAAA,QAHI;AAIJP,IAAAA,OAAO,EAAEgB,WAJL;AAKJC,IAAAA,SALI;AAMJC,IAAAA,oBAAoB,GAAG,KANnB;AAOJC,IAAAA,SAAS,GAAG,KAPR;AAQJC,IAAAA,UAAU,GAAG,EART;AASJC,IAAAA,eAAe,GAAG,EATd;AAUJjB,IAAAA,SAVI;AAWJkB,IAAAA,gBAAgB,GAAG,KAXf;AAYJC,IAAAA,mBAAmB,GAAG,KAZlB;AAaJC,IAAAA,oBAAoB,GAAG,KAbnB;AAcJC,IAAAA,aAAa,GAAG,KAdZ;AAeJC,IAAAA,mBAAmB,GAAG,KAflB;AAgBJC,IAAAA,iBAAiB,GAAG,KAhBhB;AAiBJC,IAAAA,YAAY,GAAG,KAjBX;AAkBJC,IAAAA,WAAW,GAAG,KAlBV;AAmBJ;AACA;AACAC,IAAAA,OAAO,GAAGrB,cArBN;AAsBJsB,IAAAA,eAtBI;AAuBJC,IAAAA,OAvBI;AAwBJC,IAAAA,SAxBI;AAyBJnC,IAAAA,IAzBI;;AA2BJ;AACAoC,IAAAA,KA5BI;AA6BJC,IAAAA,iBA7BI;AA8BJC,IAAAA;AA9BI,MA+BF9B,KA/BJ;AAAA,QAgCM+B,KAAK,GAAGnE,6BAA6B,CAACoC,KAAD,EAAQnC,SAAR,CAhC3C;;AAkCA,QAAM,CAAC4B,MAAD,EAASuC,SAAT,IAAsBlE,KAAK,CAACmE,QAAN,CAAe,IAAf,CAA5B;AACA,QAAMC,KAAK,GAAGpE,KAAK,CAACqE,MAAN,CAAa,EAAb,CAAd;AACA,QAAMC,YAAY,GAAGtE,KAAK,CAACqE,MAAN,CAAa,IAAb,CAArB;AACA,QAAME,QAAQ,GAAGvE,KAAK,CAACqE,MAAN,CAAa,IAAb,CAAjB;AACA,QAAMG,SAAS,GAAGhE,UAAU,CAAC+D,QAAD,EAAW/B,GAAX,CAA5B;AACA,QAAMiC,aAAa,GAAGxC,gBAAgB,CAACC,KAAD,CAAtC;AACA,QAAMwC,cAAc,GAAG,CAACjC,iBAAiB,GAAGP,KAAK,CAAC,aAAD,CAA1B,KAA8C,IAA9C,GAAqDO,iBAArD,GAAyE,IAAhG;;AAEA,QAAMkC,MAAM,GAAG,MAAMrE,aAAa,CAACgE,YAAY,CAACM,OAAd,CAAlC;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrBT,IAAAA,KAAK,CAACQ,OAAN,CAAcL,QAAd,GAAyBA,QAAQ,CAACK,OAAlC;AACAR,IAAAA,KAAK,CAACQ,OAAN,CAAcE,SAAd,GAA0BR,YAAY,CAACM,OAAvC;AACA,WAAOR,KAAK,CAACQ,OAAb;AACD,GAJD;;AAMA,QAAMG,aAAa,GAAG,MAAM;AAC1BrB,IAAAA,OAAO,CAACsB,KAAR,CAAcH,QAAQ,EAAtB,EAA0B;AACxBtB,MAAAA;AADwB,KAA1B,EAD0B,CAGtB;;AAEJgB,IAAAA,QAAQ,CAACK,OAAT,CAAiBK,SAAjB,GAA6B,CAA7B;AACD,GAND;;AAQA,QAAMC,UAAU,GAAGtE,gBAAgB,CAAC,MAAM;AACxC,UAAMuE,iBAAiB,GAAGpD,YAAY,CAACC,SAAD,CAAZ,IAA2B2C,MAAM,GAAGS,IAA9D;AACA1B,IAAAA,OAAO,CAAC2B,GAAR,CAAYR,QAAQ,EAApB,EAAwBM,iBAAxB,EAFwC,CAEI;;AAE5C,QAAIZ,QAAQ,CAACK,OAAb,EAAsB;AACpBG,MAAAA,aAAa;AACd;AACF,GAPkC,CAAnC;AAQA,QAAMO,UAAU,GAAGtF,KAAK,CAACuF,WAAN,CAAkB,MAAM7B,OAAO,CAAC4B,UAAR,CAAmBT,QAAQ,EAA3B,CAAxB,EAAwD,CAACnB,OAAD,CAAxD,CAAnB;AACA,QAAM8B,eAAe,GAAG5E,gBAAgB,CAAC6E,IAAI,IAAI;AAC/CnB,IAAAA,YAAY,CAACM,OAAb,GAAuBa,IAAvB;;AAEA,QAAI,CAACA,IAAL,EAAW;AACT;AACD;;AAED,QAAI/D,IAAI,IAAI4D,UAAU,EAAtB,EAA0B;AACxBP,MAAAA,aAAa;AACd,KAFD,MAEO;AACL9D,MAAAA,UAAU,CAACsD,QAAQ,CAACK,OAAV,EAAmBF,cAAnB,CAAV;AACD;AACF,GAZuC,CAAxC;AAaA,QAAMgB,WAAW,GAAG1F,KAAK,CAACuF,WAAN,CAAkB,MAAM;AAC1C7B,IAAAA,OAAO,CAACiC,MAAR,CAAed,QAAQ,EAAvB,EAA2BH,cAA3B;AACD,GAFmB,EAEjB,CAAChB,OAAD,EAAUgB,cAAV,CAFiB,CAApB;AAGA1E,EAAAA,KAAK,CAAC4F,SAAN,CAAgB,MAAM;AACpB,WAAO,MAAM;AACXF,MAAAA,WAAW;AACZ,KAFD;AAGD,GAJD,EAIG,CAACA,WAAD,CAJH;AAKA1F,EAAAA,KAAK,CAAC4F,SAAN,CAAgB,MAAM;AACpB,QAAIlE,IAAJ,EAAU;AACRwD,MAAAA,UAAU;AACX,KAFD,MAEO,IAAI,CAACT,aAAD,IAAkB,CAAC3B,oBAAvB,EAA6C;AAClD4C,MAAAA,WAAW;AACZ;AACF,GAND,EAMG,CAAChE,IAAD,EAAOgE,WAAP,EAAoBjB,aAApB,EAAmC3B,oBAAnC,EAAyDoC,UAAzD,CANH;;AAQA,QAAMzD,UAAU,GAAG5B,QAAQ,CAAC,EAAD,EAAKqC,KAAL,EAAY;AACrCN,IAAAA,OAAO,EAAEgB,WAD4B;AAErCE,IAAAA,oBAFqC;AAGrCI,IAAAA,gBAHqC;AAIrCC,IAAAA,mBAJqC;AAKrCC,IAAAA,oBALqC;AAMrCC,IAAAA,aANqC;AAOrCC,IAAAA,mBAPqC;AAQrCC,IAAAA,iBARqC;AASrC5B,IAAAA,MATqC;AAUrC6B,IAAAA,YAVqC;AAWrCC,IAAAA;AAXqC,GAAZ,CAA3B;;AAcA,QAAM7B,OAAO,GAAGJ,iBAAiB,CAACC,UAAD,CAAjC;;AAEA,MAAI,CAACgC,WAAD,IAAgB,CAAC/B,IAAjB,KAA0B,CAAC+C,aAAD,IAAkB9C,MAA5C,CAAJ,EAAyD;AACvD,WAAO,IAAP;AACD;;AAED,QAAMkE,WAAW,GAAG,MAAM;AACxB3B,IAAAA,SAAS,CAAC,KAAD,CAAT;;AAEA,QAAIH,iBAAJ,EAAuB;AACrBA,MAAAA,iBAAiB;AAClB;AACF,GAND;;AAQA,QAAM+B,YAAY,GAAG,MAAM;AACzB5B,IAAAA,SAAS,CAAC,IAAD,CAAT;;AAEA,QAAIF,kBAAJ,EAAwB;AACtBA,MAAAA,kBAAkB;AACnB;;AAED,QAAIlB,oBAAJ,EAA0B;AACxB4C,MAAAA,WAAW;AACZ;AACF,GAVD;;AAYA,QAAMK,mBAAmB,GAAGC,KAAK,IAAI;AACnC,QAAIA,KAAK,CAACC,MAAN,KAAiBD,KAAK,CAACE,aAA3B,EAA0C;AACxC;AACD;;AAED,QAAIvC,eAAJ,EAAqB;AACnBA,MAAAA,eAAe,CAACqC,KAAD,CAAf;AACD;;AAED,QAAIpC,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACoC,KAAD,EAAQ,eAAR,CAAP;AACD;AACF,GAZD;;AAcA,QAAMG,aAAa,GAAGH,KAAK,IAAI;AAC7B,QAAInC,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACmC,KAAD,CAAT;AACD,KAH4B,CAG3B;AACF;AACA;AACA;AACA;AACA;;;AAGA,QAAIA,KAAK,CAACI,GAAN,KAAc,QAAd,IAA0B,CAACd,UAAU,EAAzC,EAA6C;AAC3C;AACD;;AAED,QAAI,CAAClC,oBAAL,EAA2B;AACzB;AACA4C,MAAAA,KAAK,CAACK,eAAN;;AAEA,UAAIzC,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACoC,KAAD,EAAQ,eAAR,CAAP;AACD;AACF;AACF,GAvBD;;AAyBA,QAAMM,UAAU,GAAG,EAAnB;;AAEA,MAAInE,QAAQ,CAACD,KAAT,CAAeqE,QAAf,KAA4BC,SAAhC,EAA2C;AACzCF,IAAAA,UAAU,CAACC,QAAX,GAAsB,IAAtB;AACD,GAtLoF,CAsLnF;;;AAGF,MAAI9B,aAAJ,EAAmB;AACjB6B,IAAAA,UAAU,CAACG,OAAX,GAAqB/F,qBAAqB,CAACmF,WAAD,EAAc1D,QAAQ,CAACD,KAAT,CAAeuE,OAA7B,CAA1C;AACAH,IAAAA,UAAU,CAACI,QAAX,GAAsBhG,qBAAqB,CAACoF,YAAD,EAAe3D,QAAQ,CAACD,KAAT,CAAewE,QAA9B,CAA3C;AACD;;AAED,QAAMC,IAAI,GAAG3D,UAAU,CAAC2D,IAAX,IAAmB5D,SAAhC;AACA,QAAM6D,SAAS,GAAG3D,eAAe,CAACnB,IAAhB,IAAwB,EAA1C;AACA,SAAO,aAAaT,IAAI,CAACN,MAAD,EAAS;AAC/ByB,IAAAA,GAAG,EAAEgD,eAD0B;AAE/BxD,IAAAA,SAAS,EAAEA,SAFoB;AAG/BqB,IAAAA,aAAa,EAAEA,aAHgB;AAI/BlB,IAAAA,QAAQ,EAAE,aAAaZ,KAAK,CAACoF,IAAD,EAAO9G,QAAQ,CAAC;AAC1CgH,MAAAA,IAAI,EAAE;AADoC,KAAD,EAExCD,SAFwC,EAE7B,CAAC9F,eAAe,CAAC6F,IAAD,CAAhB,IAA0B;AACtCG,MAAAA,EAAE,EAAE/D,SADkC;AAEtCtB,MAAAA,UAAU,EAAE5B,QAAQ,CAAC,EAAD,EAAK4B,UAAL,EAAiBmF,SAAS,CAACnF,UAA3B,CAFkB;AAGtCqC,MAAAA;AAHsC,KAFG,EAMxCG,KANwC,EAMjC;AACRzB,MAAAA,GAAG,EAAEgC,SADG;AAERX,MAAAA,SAAS,EAAEsC,aAFH;AAGRtD,MAAAA,SAAS,EAAE3C,IAAI,CAAC0B,OAAO,CAACE,IAAT,EAAe8E,SAAS,CAAC/D,SAAzB,EAAoCA,SAApC,CAHP;AAIRV,MAAAA,QAAQ,EAAE,CAAC,CAACqB,YAAD,IAAiBd,iBAAjB,GAAqC,aAAarB,IAAI,CAACqB,iBAAD,EAAoB7C,QAAQ,CAAC;AAC5F,uBAAe,IAD6E;AAE5F6B,QAAAA,IAAI,EAAEA,IAFsF;AAG5FqF,QAAAA,OAAO,EAAEhB;AAHmF,OAAD,EAI1FpD,aAJ0F,CAA5B,CAAtD,GAIU,IAJX,EAIiB,aAAatB,IAAI,CAACH,SAAD,EAAY;AACtDiC,QAAAA,mBAAmB,EAAEA,mBADiC;AAEtDD,QAAAA,gBAAgB,EAAEA,gBAFoC;AAGtDI,QAAAA,mBAAmB,EAAEA,mBAHiC;AAItD0D,QAAAA,SAAS,EAAE1B,UAJ2C;AAKtD5D,QAAAA,IAAI,EAAEA,IALgD;AAMtDS,QAAAA,QAAQ,EAAE,aAAanC,KAAK,CAACiH,YAAN,CAAmB9E,QAAnB,EAA6BmE,UAA7B;AAN+B,OAAZ,CAJlC;AAJF,KANiC,CAAf;AAJG,GAAT,CAAxB;AA4BD,CA5NkC,CAAnC;AA6NAY,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC9E,aAAa,CAAC+E;AACtD;AADwC,EAEtC;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACE3E,EAAAA,iBAAiB,EAAEzC,SAAS,CAACqH,WAT7B;;AAWA;AACF;AACA;AACE3E,EAAAA,aAAa,EAAE1C,SAAS,CAACsH,MAdzB;;AAgBA;AACF;AACA;AACEpF,EAAAA,QAAQ,EAAEhC,mBAAmB,CAACqH,UAnB9B;;AAqBA;AACF;AACA;AACE5F,EAAAA,OAAO,EAAE3B,SAAS,CAACsH,MAxBnB;;AA0BA;AACF;AACA;AACE1E,EAAAA,SAAS,EAAE5C,SAAS,CAACwH,MA7BrB;;AA+BA;AACF;AACA;AACA;AACE3E,EAAAA,oBAAoB,EAAE7C,SAAS,CAACyH,IAnChC;;AAqCA;AACF;AACA;AACA;AACE3E,EAAAA,SAAS,EAAE9C,SAAS,CAACqH,WAzCrB;;AA2CA;AACF;AACA;AACA;AACA;AACEtE,EAAAA,UAAU,EAAE/C,SAAS,CAAC0H,KAAV,CAAgB;AAC1BhB,IAAAA,IAAI,EAAE1G,SAAS,CAACqH;AADU,GAAhB,CAhDZ;;AAoDA;AACF;AACA;AACA;AACErE,EAAAA,eAAe,EAAEhD,SAAS,CAAC0H,KAAV,CAAgB;AAC/B7F,IAAAA,IAAI,EAAE7B,SAAS,CAACsH;AADe,GAAhB,CAxDjB;;AA4DA;AACF;AACA;AACA;AACA;AACA;AACA;AACEvF,EAAAA,SAAS,EAAE/B;AACX;AADoB,GAEnB2H,SAFU,CAEA,CAACxH,eAAD,EAAkBH,SAAS,CAAC4H,IAA5B,CAFA,CAnEX;;AAuEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE3E,EAAAA,gBAAgB,EAAEjD,SAAS,CAACyH,IAhF5B;;AAkFA;AACF;AACA;AACA;AACA;AACA;AACA;AACEvE,EAAAA,mBAAmB,EAAElD,SAAS,CAACyH,IAzF/B;;AA2FA;AACF;AACA;AACA;AACEtE,EAAAA,oBAAoB,EAAEnD,SAAS,CAACyH,IA/FhC;;AAiGA;AACF;AACA;AACA;AACErE,EAAAA,aAAa,EAAEpD,SAAS,CAACyH,IArGzB;;AAuGA;AACF;AACA;AACA;AACA;AACEpE,EAAAA,mBAAmB,EAAErD,SAAS,CAACyH,IA5G/B;;AA8GA;AACF;AACA;AACA;AACEnE,EAAAA,iBAAiB,EAAEtD,SAAS,CAACyH,IAlH7B;;AAoHA;AACF;AACA;AACA;AACElE,EAAAA,YAAY,EAAEvD,SAAS,CAACyH,IAxHxB;;AA0HA;AACF;AACA;AACA;AACA;AACA;AACEjE,EAAAA,WAAW,EAAExD,SAAS,CAACyH,IAhIvB;;AAkIA;AACF;AACA;AACA;AACE/D,EAAAA,eAAe,EAAE1D,SAAS,CAAC4H,IAtI3B;;AAwIA;AACF;AACA;AACA;AACA;AACA;AACA;AACEjE,EAAAA,OAAO,EAAE3D,SAAS,CAAC4H,IA/InB;;AAiJA;AACF;AACA;AACEhE,EAAAA,SAAS,EAAE5D,SAAS,CAAC4H,IApJrB;;AAsJA;AACF;AACA;AACEnG,EAAAA,IAAI,EAAEzB,SAAS,CAACyH,IAAV,CAAeF;AAzJrB,CAFF,GA4JI,KAAK,CA5JT;AA6JA,eAAelF,aAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"BackdropComponent\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"closeAfterTransition\", \"component\", \"components\", \"componentsProps\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"theme\", \"onTransitionEnter\", \"onTransitionExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport isHostComponent from '../utils/isHostComponent';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../TrapFocus';\nimport { getModalUtilityClass } from './modalUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nconst defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\n  var _props$ariaHidden;\n\n  const {\n    BackdropComponent,\n    BackdropProps,\n    children,\n    classes: classesProp,\n    className,\n    closeAfterTransition = false,\n    component = 'div',\n    components = {},\n    componentsProps = {},\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    // private\n    // eslint-disable-next-line react/prop-types\n    manager = defaultManager,\n    onBackdropClick,\n    onClose,\n    onKeyDown,\n    open,\n\n    /* eslint-disable react/prop-types */\n    theme,\n    onTransitionEnter,\n    onTransitionExited\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [exited, setExited] = React.useState(true);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  const hasTransition = getHasTransition(props);\n  const ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  const ownerState = _extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  const handleEnter = () => {\n    setExited(false);\n\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n\n  const handleExited = () => {\n    setExited(true);\n\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  const Root = components.Root || component;\n  const rootProps = componentsProps.root || {};\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({\n      role: \"presentation\"\n    }, rootProps, !isHostComponent(Root) && {\n      as: component,\n      ownerState: _extends({}, ownerState, rootProps.ownerState),\n      theme\n    }, other, {\n      ref: handleRef,\n      onKeyDown: handleKeyDown,\n      className: clsx(classes.root, rootProps.className, className),\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({\n        \"aria-hidden\": true,\n        open: open,\n        onClick: handleBackdropClick\n      }, BackdropProps)) : null, /*#__PURE__*/_jsx(TrapFocus, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the backdrop element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default ModalUnstyled;"]},"metadata":{},"sourceType":"module"}